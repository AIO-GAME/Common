<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AIO.Attribute</name>
    </assembly>
    <members>
        <member name="T:AssemblyInfo">
            <summary>
            程序集信息
            </summary>
        </member>
        <member name="F:AssemblyInfo.KEY">
            <summary>
            密钥信息
            </summary>
        </member>
        <member name="F:AssemblyInfo.PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="F:AssemblyInfo.Token">
            <summary>
            公钥Token
            </summary>
        </member>
        <member name="F:AssemblyInfo.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="F:AssemblyInfo.FileVersion">
            <summary>
            指示编译器使用 Win32 文件版本资源的特定版本号。 Win32 文件版本不需要与程序集的版本号相同。
            </summary>
        </member>
        <member name="F:AssemblyInfo.KeyFile">
            <summary>
            密钥位置
            </summary>
        </member>
        <member name="F:AssemblyInfo.KeyName">
            <summary>
            密钥位置
            </summary>
        </member>
        <member name="F:AssemblyInfo.Company">
            <summary>
            作者
            </summary>
        </member>
        <member name="F:AssemblyInfo.Copyright">
            <summary>
            程序集属性
            </summary>
        </member>
        <member name="F:AssemblyInfo.Culture">
            <summary>
            支持的区域性
            </summary>
        </member>
        <member name="T:DllAutomation">
            <summary>
            DLL自动化处理
            </summary>
        </member>
        <member name="F:DllAutomation.Order">
            <summary>
            存储Dic列表 从小到达排序
            </summary>
        </member>
        <member name="F:DllAutomation.InterfaceName">
            <summary>
            接口名
            </summary>
        </member>
        <member name="M:DllAutomation.Initialize(System.Reflection.Assembly@)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:DllAutomation.Initialize(System.Collections.Generic.IEnumerable{System.Reflection.Assembly}@)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:DllAutomation.InstallTimer">
            <summary>
            实现计时器
            </summary>
        </member>
        <member name="M:DllAutomation.Install">
            <summary>
            实现计时器
            </summary>
        </member>
        <member name="M:DllAutomation.UnInstallTimer">
            <summary>
            卸载 实现计时器
            </summary>
        </member>
        <member name="M:DllAutomation.Uninstall">
            <summary>
            实现计时器
            </summary>
        </member>
        <member name="T:DllAutomationAttribute">
            <summary>
            DLL 注入属性
            </summary>
        </member>
        <member name="P:DllAutomationAttribute.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:DllAutomationAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:DllAutomationAttribute.SystemType">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="M:DllAutomationAttribute.#ctor(System.Type,System.String,System.Int32)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:DllAutomationAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:IDllAutomation">
            <summary>
            DLL自动化处理
            </summary>
        </member>
        <member name="M:IDllAutomation.Install">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:IDllAutomation.UnInstall">
            <summary>
            卸载
            </summary>
        </member>
        <member name="T:ISystemAutomation">
            <summary>
            系统自动化
            </summary>
        </member>
        <member name="M:ISystemAutomation.Install">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ISystemAutomation.UnInstall">
            <summary>
            卸载
            </summary>
        </member>
        <member name="T:SystemAutomation">
            <summary>
            系统自动化注册
            </summary>
        </member>
        <member name="F:SystemAutomation.Order">
            <summary>
            存储Dic列表 从小到达排序
            </summary>
        </member>
        <member name="F:SystemAutomation.InterfaceName">
            <summary>
            接口名
            </summary>
        </member>
        <member name="M:SystemAutomation.Initialize(System.Reflection.Assembly@)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:SystemAutomation.Initialize(System.Collections.Generic.IEnumerable{System.Reflection.Assembly}@)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:SystemAutomation.InstallTimer">
            <summary>
            实现计时器
            </summary>
        </member>
        <member name="M:SystemAutomation.Install">
            <summary>
            实现计时器
            </summary>
        </member>
        <member name="M:SystemAutomation.Uninstall">
            <summary>
            卸载 
            </summary>
        </member>
        <member name="M:SystemAutomation.UnInstallTimer">
            <summary>
            卸载 实现计时器
            </summary>
        </member>
        <member name="T:SystemAutomationAttribute">
            <summary>
            系统自动化注册属性
            </summary>
        </member>
        <member name="P:SystemAutomationAttribute.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:SystemAutomationAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:SystemAutomationAttribute.SystemType">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="M:SystemAutomationAttribute.#ctor(System.Type,System.String,System.Int32)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:SystemAutomationAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:AIO.EArgLabel">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="F:AIO.EArgLabel.Bool">
            <summary>
            BOOL
            </summary>
        </member>
        <member name="F:AIO.EArgLabel.Integer">
            <summary>
            Int
            </summary>
        </member>
        <member name="F:AIO.EArgLabel.IntegerArray">
            <summary>
            Int数组
            </summary>
        </member>
        <member name="F:AIO.EArgLabel.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:AIO.EArgLabel.StringArray">
            <summary>
            字符串数组
            </summary>
        </member>
        <member name="F:AIO.EArgLabel.Enum">
            <summary>
            枚举
            </summary>
        </member>
        <member name="T:AIO.ArgumentAttribute">
            <summary>
            属性解析
            </summary>
        </member>
        <member name="P:AIO.ArgumentAttribute.Label">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:AIO.ArgumentAttribute.Type">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="M:AIO.ArgumentAttribute.#ctor(System.String,AIO.EArgLabel)">
            <summary>
            参数
            </summary>
        </member>
        <member name="T:AIO.ArgumentCustom">
            <summary>
            自定义参数解析
            </summary>
        </member>
        <member name="P:AIO.ArgumentCustom.Command">
            <summary>
            命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.SubResolver(System.Reflection.FieldInfo@,System.Attribute@,System.String@)">
            <summary>
            字段解析
            </summary>
            <param name="field">字段</param>
            <param name="attribute">属性</param>
            <param name="command">命令</param>
            <returns>Ture:解析成功 False:解析失败</returns>
        </member>
        <member name="M:AIO.ArgumentCustom.Resolver(System.String@)">
            <summary>
            解析
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:AIO.ArgumentCustom.ToString">
            <summary>
            重写转化 String
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.GetBool(System.String@,System.String@)">
            <summary>
            获取 Bool
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.GetString(System.String@,System.String@)">
            <summary>
            获取 String
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.GetStringArray(System.String@,System.String@)">
            <summary>
            获取 String Array
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.GetEnum(System.String@,System.Type@,System.String@)">
            <summary>
            获取 String Array
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.GetIntegerArray(System.String@,System.String@)">
            <summary>
            获取 String Array
            </summary>
        </member>
        <member name="M:AIO.ArgumentCustom.GetInteger(System.String@,System.String@)">
            <summary>
            获取 Int
            </summary>
            如果为-1 则说明没有使用
        </member>
        <member name="T:AIO.ArgumentUtils">
            <summary>
            参数帮助类
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.ResolverCustomCur``1">
            <summary>
            解析自定义命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.ResolverCustom``1(System.String@)">
            <summary>
            解析自定义命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.ResolverCustom``1(System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            解析自定义命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.ResolverCur``1">
            <summary>
            解析默认命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.Resolver``1(System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            解析默认命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.Resolver``1(System.String@)">
            <summary>
            解析默认命令
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.Resolver``1(``0,System.String@)">
            <summary>
            解析
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.GetBool(System.String@,System.String@)">
            <summary>
            获取 Bool
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.GetString(System.String@,System.String@)">
            <summary>
            获取 String
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.GetStringArray(System.String@,System.String@)">
            <summary>
            获取 String Array
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.GetEnum(System.String,System.Type,System.String)">
            <summary>
            获取 String Array
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.GetIntegerArray(System.String@,System.String@)">
            <summary>
            获取 String Array
            </summary>
        </member>
        <member name="M:AIO.ArgumentUtils.GetInteger(System.String@,System.String@)">
            <summary>
            获取 Int
            </summary>
            如果为-1 则说明没有使用
        </member>
        <member name="T:AIO.ERuntimePlatform">
            <summary>
            The platform application is running. Returned by Application.platform.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.GameCoreScarlett">
            <summary>
             In the Unity editor on GameCoreScarlett.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.OSXEditor">
            <summary>
            In the Unity editor on macOS.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.OSXPlayer">
            <summary>
            In the player on macOS.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WindowsPlayer">
            <summary>
            In the player on Windows.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.OSXWebPlayer">
            <summary>
            In the web player on macOS.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.OSXDashboardPlayer">
            <summary>
            In the Dashboard widget on macOS.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WindowsWebPlayer">
            <summary>
            In the web player on Windows.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WindowsEditor">
            <summary>
            In the Unity editor on Windows.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.IPhonePlayer">
            <summary>
            In the player on the iPhone.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.PS3">
            <summary>
            In the Unity editor on PS3.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.XBOX360">
            <summary>
            In the Unity editor on XBOX360.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.Android">
            <summary>
            In the player on Android devices.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.NaCl">
            <summary>
            In the Unity editor on NaCl.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.LinuxPlayer">
            <summary>
            In the player on Linux.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.FlashPlayer">
            <summary>
            In the player on FlashPlayer.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.LinuxEditor">
            <summary>
            In the Unity editor on Linux.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WebGLPlayer">
            <summary>
            In the player on WebGL
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WSAPlayerX86">
            <summary>
            In the player on Windows Store Apps when CPU architecture is X86.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WSAPlayerX64">
            <summary>
            In the player on Windows Store Apps when CPU architecture is X64.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WSAPlayerARM">
            <summary>
            In the player on Windows Store Apps when CPU architecture is ARM.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WP8Player">
            <summary>
            In the web player on WP8Player.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.BB10Player">
            <summary>
            In the web player on BB10Player.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.BlackBerryPlayer">
            <summary>
            In the web player on BlackBerryPlayer.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.TizenPlayer">
            <summary>
            In the web player on TizenPlayer.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.PSP2">
            <summary>
            In the web player on PSP2.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.PS4">
            <summary>
            In the player on the Playstation 4.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.PSM">
            <summary>
            In the web player on PSM.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.XboxOne">
            <summary>
            In the player on Xbox One.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.SamsungTVPlayer">
            <summary>
            In the web player on SamsungTVPlayer.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.WiiU">
            <summary>
            In the web player on WiiU.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.tvOS">
            <summary>
            In the player on the Apple's tvOS.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.Switch">
            <summary>
            In the player on Nintendo Switch.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.Lumin">
            <summary>
            In the web player on Lumin.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.Stadia">
            <summary>
            In the player on Stadia.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.CloudRendering">
            <summary>
            In the player on CloudRendering.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.GameCoreXboxSeries">
            <summary>
            In the web player on GameCoreXboxSeries.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.GameCoreXboxOne">
            <summary>
            In the web player on GameCoreXboxOne.
            </summary>
        </member>
        <member name="F:AIO.ERuntimePlatform.PS5">
            <summary>
            In the player on the Playstation 5.
            </summary>
        </member>
        <member name="F:AIO.Strings.ProductName">
            <summary>The name of this product.</summary>
        </member>
        <member name="F:AIO.Strings.UnityEditor">
            <summary>The conditional compilation symbol for Editor-Only code.</summary>
        </member>
        <member name="F:AIO.Strings.Assertions">
            <summary>The conditional compilation symbol for assertions.</summary>
        </member>
        <member name="M:GCommandDuplicationKeyException.#ctor(System.Int32,System.String,System.String)">
            <summary>
            游戏命令Key存在多个
            </summary>
        </member>
        <member name="T:GCommandException">
            <summary>
            游戏命令异常
            </summary>
        </member>
        <member name="T:GCommandInvokeException">
            <summary>
            命令执行异常
            </summary>
        </member>
        <member name="M:GCommandNotFoundException.#ctor(System.Int32)">
            <summary>
            查询指定游戏命令异常
            </summary>
        </member>
        <member name="T:GCommandNotSupportedException">
            <summary>
            游戏命令不受支持
            </summary>
        </member>
        <member name="M:GCommandParameterNoMatchException.#ctor(System.Int32,System.Object[])">
            <summary>
            游戏命令参数不匹配
            </summary>
        </member>
        <member name="T:GCommandResolverException">
            <summary>
            游戏命令解析异常
            </summary>
        </member>
        <member name="M:GCommandResolverException.#ctor(System.String)">
            <summary>
            游戏命令解析异常
            </summary>
        </member>
        <member name="T:GCommandVerifyException">
            <summary>
            命令验证异常
            </summary>
        </member>
        <member name="T:GCommandSearchDatabase">
            <summary>
            命令结构
            </summary>
        </member>
        <member name="P:GCommandSearchDatabase.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:GCommandSearchDatabase.Commands">
            <summary>
            命令
            </summary>
        </member>
        <member name="P:GCommandSearchDatabase.Parent">
            <summary>
            父标题
            </summary>
        </member>
        <member name="P:GCommandSearchDatabase.Child">
            <summary>
            父标题
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.#ctor(System.String)">
            <summary>
            命令结构
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.#ctor(System.String,GCommandSearchDatabase)">
            <summary>
            命令结构
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.Add(GCommandAttribute)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.Add(System.String,GCommandAttribute)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.Add(System.Collections.Generic.IList{System.String},GCommandAttribute)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:GCommandSearchDatabase.ToString">
            <inheritdoc/>
        </member>
        <member name="T:GCommandAttribute">
            <summary>
            命令属性
            放置在 构造函数 抽象函数 非静态函数 虚函数 重写函数 函数泛型 都会自动过滤
            验证函数同样要求 并且不能包含参数
            </summary>
        </member>
        <member name="P:GCommandAttribute.ID">
            <summary>
            命令ID
            </summary>
        </member>
        <member name="F:GCommandAttribute.Validation">
            <summary>
            验证函数
            </summary>
        </member>
        <member name="P:GCommandAttribute.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:GCommandAttribute.HeaderList">
            <summary>
            标题分段列表
            </summary>
        </member>
        <member name="F:GCommandAttribute.Help">
            <summary>
            一些帮助显示，以便用户理解命令
            </summary>
        </member>
        <member name="F:GCommandAttribute.Name">
            <summary>
            可以用来搜索命令的名称
            </summary>
        </member>
        <member name="F:GCommandAttribute.QuickName">
            <summary>
            可以搜索命令的快速名称(使其简短以快速访问命令)
            </summary>
        </member>
        <member name="F:GCommandAttribute.Category">
            <summary>
            该类别的命令可以帮助您浏览它
            </summary>
        </member>
        <member name="M:GCommandAttribute.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GCommandAttribute.#ctor(System.Int32)">
            <summary>
            游戏命令
            </summary>
        </member>
        <member name="P:GCommandAttribute.CommandMethod">
            <summary>
            方法
            </summary>
        </member>
        <member name="P:GCommandAttribute.Parameters">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:GCommandAttribute.RuntimeType">
            <summary>
            所属类
            </summary>
        </member>
        <member name="P:GCommandAttribute.ValidationMethod">
            <summary>
            验证函数 Validation
            </summary>
        </member>
        <member name="P:GCommandAttribute.FullName">
            <summary>
            全局命名
            </summary>
        </member>
        <member name="T:GCommandSystem">
            <summary>
            游戏命令系统
            </summary>
        </member>
        <member name="M:GCommandSystem.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:GCommandSystem.Register(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:GCommandSystem.Register(System.Reflection.Assembly)">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:GCommandSystem.Register(System.Type)">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:GCommandSystem.Register(System.Type,System.Reflection.MethodInfo)">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:GCommandSystem.Debug">
            <summary>
            打印
            </summary>
        </member>
        <member name="M:GCommandSystem.Export(System.String@)">
            <summary>
            导出命令
            </summary>
        </member>
        <member name="M:GCommandSystem.Invoke(System.String@)">
            <summary>
            解析字符串
            </summary>
        </member>
        <member name="M:GCommandSystem.Invoke(System.Int32@,System.Object[])">
            <summary>
            解析字符串
            </summary>
        </member>
        <member name="M:GCommandSystem.Invoke(System.Int32@)">
            <summary>
            解析字符串
            </summary>
        </member>
        <member name="M:GCommandSystem.UnRegister">
            <summary>
            撤销注册命令
            </summary>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AIO.Common.Unity.Editor</name>
    </assembly>
    <members>
        <member name="T:AIO.Unity.Editor.OutPutInfoMation">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="T:AIO.Unity.Editor.RectExtension">
            <summary>
            矩形扩展
            </summary>
        </member>
        <member name="M:AIO.Unity.Editor.RectExtension.DrawGUI(UnityEngine.Rect,UnityEngine.Color@,UnityEngine.Color@)">
            <summary>
            GUI绘制矩形
            </summary>
            <param name="rect">矩形</param>
            <param name="fillColor">填充颜色</param>
            <param name="outlineColor">描边颜色</param>
        </member>
        <member name="M:AIO.Unity.Editor.RectExtension.DrawGUI(UnityEngine.Rect,UnityEngine.Color@)">
            <summary>
            GUI绘制矩形
            </summary>
            <param name="rect">矩形</param>
            <param name="fillColor">填充颜色</param>
        </member>
        <member name="M:AIO.Unity.Editor.RectExtension.DrawGUI(UnityEngine.Rect)">
            <summary>
            GUI绘制矩形
            </summary>
            <param name="rect">矩形</param>
        </member>
        <member name="T:AIO.Unity.Editor.UnityEditorInternalException">
            <summary>
            这个类表示在访问Unity内部编辑器函数时发生错误时抛出的异常。
            </summary>
        </member>
        <member name="M:AIO.Unity.Editor.UnityEditorInternalException.#ctor(System.Exception@)">
            <inheritdoc/>
        </member>
        <member name="T:AIO.Unity.Editor.SymlinkTools">
            <summary>
            符号链接工具类
            An editor utility for easily creating symlinks in your project.
            Adds a Menu item under `Assets/Create/Folder (Symlink)`, and 
            draws a small indicator in the Project view for folders that are
            symlinks.
            </summary>
        </member>
        <member name="M:AIO.Unity.Editor.SymlinkTools.#cctor">
            <summary>
            Static constructor subscribes to projectWindowItemOnGUI delegate.
            </summary>
        </member>
        <member name="M:AIO.Unity.Editor.SymlinkTools.OnProjectWindowItemGUI(System.String,UnityEngine.Rect)">
            <summary>
            Draw a little indicator if folder is a symlink
            </summary>
            <param name="guid"></param>
            <param name="r"></param>
        </member>
        <member name="M:AIO.Unity.Editor.SymlinkTools.SymlinkAbsolute">
            Add a menu item in the Assets/Create category to add symlinks to directories.
        </member>
        <member name="T:AIO.MenuFunctionState">
            <summary>
            The possible states for a function in a <see cref="T:UnityEditor.GenericMenu"/>.
            </summary>
        </member>
        <member name="F:AIO.MenuFunctionState.Normal">
            <summary>
            正常显示
            </summary>
        </member>
        <member name="F:AIO.MenuFunctionState.Selected">
            <summary>
            在它旁边有一个复选标记，表示它已被选中。
            </summary>
        </member>
        <member name="F:AIO.MenuFunctionState.Disabled">
            <summary>
            颜色变灰，无法使用。
            </summary>
        </member>
        <member name="T:AIO.GenericMenuExtend">
            <summary>
            菜单扩展
            </summary>
        </member>
        <member name="M:AIO.GenericMenuExtend.AddFunction(UnityEditor.GenericMenu,System.String,AIO.MenuFunctionState,UnityEditor.GenericMenu.MenuFunction)">
            <summary>
            添加菜单项，以便为每个属性的目标对象执行指定的函数。
            </summary>
        </member>
        <member name="M:AIO.GenericMenuExtend.AddFunction(UnityEditor.GenericMenu,System.String,System.Boolean,UnityEditor.GenericMenu.MenuFunction)">
            <summary>
            添加菜单项，以便为每个属性的目标对象执行指定的函数。
            </summary>
        </member>
        <member name="M:AIO.GenericMenuExtend.AddPropertyModifierFunction(UnityEditor.GenericMenu,UnityEditor.SerializedProperty,System.String,System.Boolean,System.Action{UnityEditor.SerializedProperty})">
            <summary>
            添加菜单项，以便为每个属性的目标对象执行指定的函数。
            </summary>
        </member>
        <member name="M:AIO.GenericMenuExtend.AddPropertyModifierFunction(UnityEditor.GenericMenu,UnityEditor.SerializedProperty,System.String,System.Action{UnityEditor.SerializedProperty})">
            <summary>
            添加一个菜单项，以便为每个属性的目标对象执行指定的函数。
            </summary>
        </member>
        <member name="M:AIO.GenericMenuExtend.AddPropertyModifierFunction(UnityEditor.GenericMenu,UnityEditor.SerializedProperty,System.String,AIO.MenuFunctionState,System.Action{UnityEditor.SerializedProperty})">
            <summary>
            为每个属性的目标对象添加一个菜单项，以执行指定的函数。
            </summary>
        </member>
        <member name="T:AIO.SerializedPropertyExtend">
            <summary>
            序列化属性扩展
            </summary>
        </member>
        <member name="M:AIO.SerializedPropertyExtend.ForEachTarget(UnityEditor.SerializedProperty,System.Action{UnityEditor.SerializedProperty},System.String)">
            <summary>
            对每个SerializedObject使用一个新的SerializedProperty执行一次' action '。或者如果只有一个目标，它使用' property '。
            </summary>
        </member>
        <member name="M:AIO.SerializedPropertyExtend.IsDefaultValueByType(UnityEditor.SerializedProperty)">
            <summary>
            Is the value of the `property` the same as the default serialized value for its type?
            </summary>
        </member>
        <member name="M:AIO.SerializedPropertyExtend.ResetValue(UnityEditor.SerializedProperty,System.String)">
            <summary>
            Resets the value of the <see cref="T:UnityEditor.SerializedProperty"/> to the default value of its type and all its field
            types, ignoring values set by constructors or field initializers.
            </summary>
            <remarks>
            If you want to run constructors and field initializers, you can call
            </remarks>
        </member>
        <member name="T:AIO.TypeExtend">
            <summary>
            类扩展
            </summary>
        </member>
        <member name="M:AIO.TypeExtend.GetPropertyType(System.Type)">
            <summary>
            返回表示指定“类型”字段的SerializedPropertyType。
            </summary>
        </member>
        <member name="T:UtilsEditor">
            <summary>
            Utils Unity Editor
            </summary>
        </member>
        <member name="T:UtilsEditor.Asset">
            <summary>
            资源
            </summary>
        </member>
        <member name="M:UtilsEditor.Asset.ApplyAssets">
            <summary>
            保存所有资源
            </summary>
        </member>
        <member name="M:UtilsEditor.Asset.ApplyPrefab(UnityEngine.GameObject)">
            <summary>
            保存预制件修改
            </summary>
        </member>
        <member name="M:UtilsEditor.Asset.SetDirty(UnityEngine.Object)">
            <summary>
            标记目标
            </summary>
        </member>
        <member name="M:UtilsEditor.Asset.GetAssetPath(UnityEngine.Object)">
            <summary>
            获取资源的相对路径
            </summary>
        </member>
        <member name="M:UtilsEditor.Asset.GetSelectAsText">
            <summary>
            获取选中资源信息
            </summary>
            <returns>选中信息</returns>
        </member>
        <member name="M:UtilsEditor.Asset.GetSelectAssetPath">
            <summary>
            获取选中资源路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsEditor.Asset.GetSelectPaths">
            <summary>
            获取多个选中路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsEditor.Asset.LoadAndInstance(System.String)">
            <summary>
            加载 并 实例化 资源
            </summary>
            <param name="assetPath">资源路径</param>
            <returns>实体</returns>
        </member>
        <member name="M:UtilsEditor.Asset.LoadAndInstance(System.String,UnityEngine.Transform)">
            <summary>
            加载 并 实例化 资源
            </summary>
            <param name="assetPath">资源路径</param>
            <param name="parent">父节点</param>
            <returns>实体</returns>
        </member>
        <member name="M:UtilsEditor.Asset.LoadAndInstance(System.String,UnityEngine.Transform,UnityEngine.Vector3)">
            <summary>
            加载 并 实例化 资源
            </summary>
            <param name="assetPath">资源路径</param>
            <param name="parent">父节点</param>
            <param name="pos">实例化坐标</param>
            <returns>实体</returns>
        </member>
        <member name="M:UtilsEditor.Asset.LoadAndInstance(System.String,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)">
            <summary>
            加载 并 实例化 资源
            </summary>
            <param name="assetPath">资源路径</param>
            <param name="parent">父节点</param>
            <param name="pos">实例化坐标</param>
            <param name="rot">旋转信息</param>
            <returns>实体</returns>
        </member>
        <member name="M:UtilsEditor.Asset.LoadAndInstance(System.String,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
            <summary>
            加载 并 实例化 资源
            </summary>
            <param name="assetPath">资源路径</param>
            <param name="parent">父物体</param>
            <param name="pos">位置</param>
            <param name="rot">旋转</param>
            <param name="scale">缩放</param>
            <returns>实体</returns>
        </member>
        <member name="M:UtilsEditor.Asset.LoadAndInstance``1(System.String,UnityEngine.Transform)">
            <summary>
            加载 并 实例化 资源
            </summary>
            <param name="assetPath">资源路径</param>
            <param name="parent">父物体</param>
            <returns>实体</returns>
        </member>
        <member name="M:UtilsEditor.Asset.SearchDirs(System.String,System.String)">
            <summary>
            遍历查找符合的文件
            </summary>
            <param name="filter">过滤器</param>
            <param name="folder">文件夹</param>
            <returns>路径</returns>
        </member>
        <member name="M:UtilsEditor.Asset.SearchDirs(System.String,System.String[])">
            <summary>
            遍历查找符合的文件
            </summary>
            <param name="filter">过滤器</param>
            <param name="folder">文件夹</param>
            <returns>路径</returns>
        </member>
        <member name="T:UtilsEditor.IO">
            <summary>
            Unity Editor IO Utils
            </summary>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetsRes``1(System.String@,System.String[])">
            <summary>
            获取指定文件夹下的预制件
            </summary>
            <param name="pattern">匹配模式</param>
            <param name="folder">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetsRes``1(System.String@,System.Func{``0,System.Boolean},System.String[])">
            <summary>
            获取指定文件夹下的预制件
            </summary>
            <param name="folder">文件夹</param>
            <param name="pattern"></param>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetsPath(System.String@,System.String[])">
            <summary>
            获取资源的相对路径
            </summary>
            <param name="pattern">匹配模式</param>
            <param name="folders">文件夹</param>
            <returns>路径数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetsPath(System.String@,System.Func{System.String,System.Boolean},System.String[])">
            <summary>
            获取资源的相对路径
            </summary>
            <param name="pattern">匹配模式</param>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <param name="folders">文件夹</param>
            <returns>路径数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetPrefabs(System.Func{UnityEngine.GameObject,System.Boolean},System.String[])">
            <summary>
            获取指定文件夹下的预制件
            </summary>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <param name="folder">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetPrefabs(System.String[])">
            <summary>
            获取指定文件夹下的预制件
            </summary>
            <param name="folder">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetClips(System.String[])">
            <summary>
            获取指定文件夹下的音频文件
            </summary>
            <param name="folder">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetClips(System.Func{UnityEngine.AnimationClip,System.Boolean},System.String[])">
            <summary>
            获取指定文件夹下的音频文件
            </summary>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <param name="folder">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetPrefabs``1(System.String[])">
            <summary>
            获取预制件身上的组件
            </summary>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetPrefabsPath(System.String[])">
            <summary>
            获取预制件资源路径
            </summary>
            <param name="folders">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetAssetPrefabsPath(System.Func{System.String,System.Boolean},System.String[])">
            <summary>
            获取预制件资源路径
            </summary>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <param name="folders">文件夹</param>
            <returns>预制件数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetFilesRelativeAsset(System.String,System.String@,System.IO.SearchOption@)">
            <summary>
            获取资源文件夹下
            </summary>
            <param name="value">路径</param>
            <param name="pattern">匹配模式</param>
            <param name="option">查找模式</param>
            <returns>以Assets路径为节点的路径数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetFilesRelativeAsset(System.String,System.Func{System.IO.FileInfo,System.Boolean}@,System.String@,System.IO.SearchOption@)">
            <summary>
            获取资源文件夹下
            </summary>
            <param name="value">路径</param>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <param name="pattern">匹配模式</param>
            <param name="option">查找模式</param>
            <returns>以Assets路径为节点的路径数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetFilesRelativeAssetNoMeta(System.String,System.Func{System.IO.FileInfo,System.Boolean},System.String,System.IO.SearchOption)">
            <summary>
            获取资源文件夹下 屏蔽meta文件
            </summary>
            <param name="value">路径</param>
            <param name="filtration">过滤函数 Ture:过滤 False:不过滤</param>
            <param name="pattern">匹配模式</param>
            <param name="option">查找模式</param>
            <returns>以Assets路径为节点的路径数组</returns>
        </member>
        <member name="M:UtilsEditor.IO.GetFilesRelativeAssetNoMeta(System.String,System.String@,System.IO.SearchOption@)">
            <summary>
            获取资源文件夹下 屏蔽meta文件
            </summary>
            <param name="value">路径</param>
            <param name="pattern">匹配模式</param>
            <param name="option">查找模式</param>
            <returns>以Assets路径为节点的路径数组</returns>
        </member>
        <member name="T:UtilsEditor.Path">
            <summary>
            提供了一些与路径相关的实用方法。
            包含与程序集有关的实用方法和属性的静态类
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.ProjectSettings">
            <summary>
            获取当前项目的 ProjectSettings 文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.EditorDefaultResources">
            <summary>
            获取当前项目的 Editor Default Resources 文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.Backups">
            <summary>
            获取当前项目的 Backups 文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.UserSettings">
            <summary>
            用户自定义设置
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.Packages">
            <summary>
            项目日志文件夹路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.Logs">
            <summary>
            项目日志文件夹路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.StreamingAssets">
            <summary>
            获取当前项目 Streaming Assets 文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.PersistentData">
            <summary>
            获取当前项目 Persistent Assets 文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.Assets">
            <summary>
            获取当前项目 Assets 文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.Editor">
            <summary>
            获取 Unity 编辑器的可执行文件的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.EditorContents">
            <summary>
            获取 Unity 编辑器的安装目录的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.Project">
            <summary>
            获取当前项目所在文件夹的完整路径。
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.ProjectName">
            <summary>
            获取当前项目名称。
            </summary>
        </member>
        <member name="F:UtilsEditor.Path.SyncVS">
            <summary>
            Unity编辑器内部的SyncVS类型
            </summary>
        </member>
        <member name="F:UtilsEditor.Path.SyncVS_SyncSolution">
            <summary>
            SyncVS.SyncSolution()方法的MethodInfo对象
            </summary>
        </member>
        <member name="M:UtilsEditor.Path.SyncUnitySolution">
            <summary>
            同步Unity工程的解决方案文件
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.RuntimeAssemblyFirstPassProject">
            <summary>
            获取程序集的第一编译阶段所对应的项目文件的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.RuntimeAssemblySecondPassProject">
            <summary>
            获取程序集的第二编译阶段所对应的项目文件的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.EditorAssemblyFirstPassProject">
            <summary>
            获取编辑器程序集的第一编译阶段所对应的项目文件的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.EditorAssemblySecondPassProject">
            <summary>
            获取编辑器程序集的第二编译阶段所对应的项目文件的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.AssemblyProjects">
            <summary>
            获取所有与程序集相关的项目文件的完整路径
            </summary>
        </member>
        <member name="M:UtilsEditor.Path.PreferredProjectPath(System.String,System.String)">
            <summary>
            比较两个项目文件的最后写入时间，选择其中一个作为当前项目的项目文件
            </summary>
        </member>
        <member name="F:UtilsEditor.Path.MsBuildDownloadLink">
            <summary>
            MSBuild的下载链接
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.environmentPaths">
            <summary>
            获取系统环境变量PATH并分割成字符串数组
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.ProgramFilesx86">
            <summary>
            获取x86程序文件夹路径，兼容32位和64位操作系统
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.MSBuild">
            <summary>
            获取MSBuild.exe文件的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.XBuild">
            <summary>
            获取xbuild命令的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.RoslynCompiler">
            <summary>
            Roslyn编译器csc.exe的完整路径
            </summary>
        </member>
        <member name="P:UtilsEditor.Path.ProjectBuilder">
            <summary>
            项目构建工具的完整路径
            </summary>
        </member>
        <member name="T:UtilsEditor.Profiler">
            <summary>
            Profiler Editor
            </summary>
        </member>
        <member name="M:UtilsEditor.Profiler.GetStorageMemoryTexture``1(``0)">
            <summary>
            获取 Texture 磁盘占用大小
            </summary>
            <returns>占用空间</returns>
        </member>
    </members>
</doc>

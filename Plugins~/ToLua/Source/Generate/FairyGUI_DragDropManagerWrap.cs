//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_DragDropManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.DragDropManager), typeof(System.Object));
		L.RegFunction("StartDrag", StartDrag);
		L.RegFunction("Cancel", Cancel);
		L.RegFunction("New", _CreateFairyGUI_DragDropManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("inst", get_inst, null);
		L.RegVar("dragAgent", get_dragAgent, null);
		L.RegVar("dragging", get_dragging, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_DragDropManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.DragDropManager obj = new FairyGUI.DragDropManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.DragDropManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartDrag(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				FairyGUI.DragDropManager obj = (FairyGUI.DragDropManager)ToLua.CheckObject<FairyGUI.DragDropManager>(L, 1);
				FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.CheckObject<FairyGUI.GObject>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				obj.StartDrag(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				FairyGUI.DragDropManager obj = (FairyGUI.DragDropManager)ToLua.CheckObject<FairyGUI.DragDropManager>(L, 1);
				FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.CheckObject<FairyGUI.GObject>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
				obj.StartDrag(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.DragDropManager.StartDrag");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cancel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.DragDropManager obj = (FairyGUI.DragDropManager)ToLua.CheckObject<FairyGUI.DragDropManager>(L, 1);
			obj.Cancel();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_inst(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, FairyGUI.DragDropManager.inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dragAgent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.DragDropManager obj = (FairyGUI.DragDropManager)o;
			FairyGUI.GLoader ret = obj.dragAgent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dragAgent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dragging(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.DragDropManager obj = (FairyGUI.DragDropManager)o;
			bool ret = obj.dragging;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dragging on a nil value");
		}
	}
}


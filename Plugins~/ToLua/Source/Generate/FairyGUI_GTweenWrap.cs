//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_GTweenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.GTween), typeof(System.Object));
		L.RegFunction("To", To);
		L.RegFunction("ToDouble", ToDouble);
		L.RegFunction("DelayedCall", DelayedCall);
		L.RegFunction("Shake", Shake);
		L.RegFunction("IsTweening", IsTweening);
		L.RegFunction("Kill", Kill);
		L.RegFunction("GetTween", GetTween);
		L.RegFunction("Clean", Clean);
		L.RegFunction("New", _CreateFairyGUI_GTween);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("catchCallbackExceptions", get_catchCallbackExceptions, set_catchCallbackExceptions);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_GTween(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.GTween obj = new FairyGUI.GTween();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.GTween.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int To(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes<float, float, float>(L, 1))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.GTweener o = FairyGUI.GTween.To(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Vector2, UnityEngine.Vector2, float>(L, 1))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				UnityEngine.Vector2 arg1 = ToLua.ToVector2(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.GTweener o = FairyGUI.GTween.To(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Vector3, float>(L, 1))
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.GTweener o = FairyGUI.GTween.To(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Vector4, UnityEngine.Vector4, float>(L, 1))
			{
				UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 1);
				UnityEngine.Vector4 arg1 = ToLua.ToVector4(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.GTweener o = FairyGUI.GTween.To(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Color, UnityEngine.Color, float>(L, 1))
			{
				UnityEngine.Color arg0 = ToLua.ToColor(L, 1);
				UnityEngine.Color arg1 = ToLua.ToColor(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.GTweener o = FairyGUI.GTween.To(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.GTween.To");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToDouble(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 1);
			double arg1 = (double)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			FairyGUI.GTweener o = FairyGUI.GTween.ToDouble(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DelayedCall(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			FairyGUI.GTweener o = FairyGUI.GTween.DelayedCall(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Shake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			FairyGUI.GTweener o = FairyGUI.GTween.Shake(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsTweening(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool o = FairyGUI.GTween.IsTweening(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				FairyGUI.TweenPropType arg1 = (FairyGUI.TweenPropType)ToLua.CheckObject(L, 2, typeof(FairyGUI.TweenPropType));
				bool o = FairyGUI.GTween.IsTweening(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.GTween.IsTweening");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Kill(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				FairyGUI.GTween.Kill(arg0);
				return 0;
			}
			else if (count == 2)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				FairyGUI.GTween.Kill(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				FairyGUI.TweenPropType arg1 = (FairyGUI.TweenPropType)ToLua.CheckObject(L, 2, typeof(FairyGUI.TweenPropType));
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				FairyGUI.GTween.Kill(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.GTween.Kill");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTween(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				FairyGUI.GTweener o = FairyGUI.GTween.GetTween(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2)
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				FairyGUI.TweenPropType arg1 = (FairyGUI.TweenPropType)ToLua.CheckObject(L, 2, typeof(FairyGUI.TweenPropType));
				FairyGUI.GTweener o = FairyGUI.GTween.GetTween(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.GTween.GetTween");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			FairyGUI.GTween.Clean();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_catchCallbackExceptions(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, FairyGUI.GTween.catchCallbackExceptions);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_catchCallbackExceptions(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			FairyGUI.GTween.catchCallbackExceptions = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}


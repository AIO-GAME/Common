// <auto-generated> This code was generated by a tool. </auto-generated>
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

using System;

namespace AIO.Security
{
    partial struct NDouble
    { 
        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="NDouble"/> </param>
        public static bool operator ==(NDouble a, NDouble b) => Math.Abs(a.Value - b.Value) <= double.Epsilon;

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="double"/> </param>
        public static bool operator ==(NDouble a, double b) => Math.Abs(a.Value - b) <= double.Epsilon;

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="NDouble"/> </param>
        public static bool operator !=(NDouble a, NDouble b) => Math.Abs(a.Value - b.Value) > double.Epsilon;

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="double"/> </param>
        public static bool operator !=(NDouble a, double b) => Math.Abs(a.Value - b) > double.Epsilon;
        /// <param name="a"> <see cref="NDouble"/> </param>
        public static NDouble operator --(NDouble a)
        {
            a.Value--;
            return a;
        }

        /// <param name="a"> <see cref="NDouble"/> </param>
        public static NDouble operator ++(NDouble a)
        {
            a.Value++;
            return a;
        }

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="NDouble"/> </param>
        public static NDouble operator +(NDouble a, NDouble b) => new NDouble(a.Value + b.Value);

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="double"/> </param>
        public static NDouble operator +(NDouble a, double b) => new NDouble(a.Value + b);

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="NDouble"/> </param>
        public static NDouble operator -(NDouble a, NDouble b) => new NDouble(a.Value - b.Value);

        /// <param name="a"> <see cref="NDouble"/> </param>
        /// <param name="b"> <see cref="double"/> </param>
        public static NDouble operator -(NDouble a, double b) => new NDouble(a.Value - b);
    }
}
